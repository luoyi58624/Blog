package com.ly666.controller.mgrAdmin;import com.ly666.entity.Admin;import com.ly666.service.LoginService;import com.ly666.util.CookieTool;import org.apache.log4j.Logger;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.CookieValue;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.ResponseBody;import javax.annotation.Resource;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.HttpSession;/** * @author ：luoyi * @date ：Created in 2019/3/3 21:53 * @desc : {} */@Controllerpublic class AdminAction {	private Logger logger = Logger.getLogger(Logger.class);	@Resource(name = "LoginService")	private LoginService loginService;	@RequestMapping("/login")	public String login(String adminName, String adminPwd, Boolean remember,	                    HttpServletRequest request, HttpServletResponse response) {		if (adminName != null && adminPwd != null) {			Admin admin = loginService.login(adminName, adminPwd);			if (admin != null) {				request.getSession().setAttribute("admin", admin);				if (remember != null) {					CookieTool.addCookie(response,"admin_name",adminName,1);					CookieTool.addCookie(response,"admin_pwd",adminPwd,1);				} else {					CookieTool.addCookie(response,"admin_name",adminName,0);					CookieTool.addCookie(response,"admin_pwd",adminPwd,0);				}				logger.info("管理员->"+admin.getAdmin_name()+"登入成功...");				return "redirect:/bk_admin/mgr_index.jsp";			} else {				request.setAttribute("error", "login error");				return "/mgr_login.jsp";			}		}		return "redirect:/mgr_login.jsp";	}	@RequestMapping("exit")	public String exit(HttpSession session) {		Admin admin = (Admin)session.getAttribute("admin");		session.removeAttribute("admin");		return "redirect:/index.jsp";	}	/*	* 检索cookie并以json返回admin对象	* */	@RequestMapping("checkAdminCookie")	@ResponseBody	public Admin checkAdminCookie(@CookieValue("admin_name")String admin_name,@CookieValue("admin_pwd")String admin_pwd) {		Admin admin = new Admin();		admin.setAdmin_name(admin_name);		admin.setAdmin_pwd(admin_pwd);		return admin;	}	/*	* 检查管理员是否已经登入	* */	@RequestMapping("checkAdminSession")	public String checkAdminSession(HttpSession session) {		if ((session.getAttribute("admin") != null))			return "redirect:/bk_admin/mgr_index.jsp";		else			return "redirect:/mgr_login.jsp";	}}