package com.ly666.util;import javax.servlet.http.Cookie;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.util.HashMap;import java.util.Map;/** * @author ：luoyi * @date ：Created in 2019/3/3 21:53 * @desc : {封装了cookie的操作方法} */public class CookieTool {	/**	 * 设置cookie	 * @author luoyi	 * @param response     将cookie响应给浏览器	 * @param cookieName   cookie名字	 * @param cookieValue  cookie值	 * @param maxAge       cookie生命周期  以一周为单位	 */	public static void addCookie(HttpServletResponse response,String cookieName,String cookieValue,int maxAge){		Cookie cookie = new Cookie(cookieName,cookieValue);		if(maxAge>0)			cookie.setMaxAge(maxAge*(60 * 60 * 24 * 7));		else			cookie.setMaxAge(0);		response.addCookie(cookie);	}	/**	 * 根据名字获取cookie（接口方法）	 * @author luoyi	 * @param request	 * @param name cookie名字	 * @return	 */	public static Cookie getCookieByName(HttpServletRequest request,String name){		Map<String,Cookie> cookieMap = ReadCookieMap(request);		if(cookieMap.containsKey(name)){			Cookie cookie = (Cookie)cookieMap.get(name);			return cookie;		}else{			return null;		}	}	/**	 * 将cookie封装到Map里面（非接口方法）	 * @author luoyi	 */	private static Map<String,Cookie> ReadCookieMap(HttpServletRequest request){		Map<String,Cookie> cookieMap = new HashMap<>();		Cookie[] cookies = request.getCookies();		if(null!=cookies){			for(Cookie cookie : cookies){				cookieMap.put(cookie.getName(), cookie);			}		}		return cookieMap;	}}