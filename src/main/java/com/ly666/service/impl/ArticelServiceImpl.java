package com.ly666.service.impl;import com.github.pagehelper.PageHelper;import com.github.pagehelper.PageInfo;import com.ly666.entity.Article;import com.ly666.mapper.ArticleMapper;import com.ly666.service.ArticleService;import org.springframework.stereotype.Service;import javax.annotation.Resource;import java.util.List;/** * @author ：luoyi * @date ：Created in 2019/3/4 21:52 * @desc : {} */@Service("ArticelServiceImpl")public class ArticelServiceImpl implements ArticleService {	@Resource(name = "ArticleMapper")	ArticleMapper articleMapper;	@Override	public PageInfo<Article> getPageArticle(Integer pageNum, Integer pageSize) {		//设置页码和一页多少条数据		PageHelper.startPage(pageNum,pageSize);		//查询所有数据		List<Article> categories = articleMapper.getAllArticle();		//获取总记录		Integer count = articleMapper.articleCount();		//设置总页数		int totalPages = count % pageSize == 0 ? count / pageSize : count / pageSize + 1;		//返回一个分页对象		return new PageInfo<>(categories,totalPages);	}	@Override	public boolean addArticle(final Article article) {		if (checkArticleData(article)) {			//设置插入数据的时间			article.setArticleTime(System.currentTimeMillis());			articleMapper.addArticle(article);			return true;		}		return false;	}	@Override	public boolean updateArticle(final Article article) {		if (checkArticleData(article)) {			//更新插入数据的时间			article.setArticleTime(System.currentTimeMillis());			articleMapper.updateArticle(article);			return true;		}		return false;	}	@Override	public boolean checkArticleData(final Article article) {		return !"".equals(article.getArticleTitle());	}	@Override	public PageInfo<Article> getLikeArticles(Integer pageNum, Integer pageSize, final String str) {		PageHelper.startPage(pageNum,pageSize);		List<Article> likeArticles = articleMapper.getLikeArticles(str);		Integer count = articleMapper.likeArticleCount(str);		int totalPages = count % pageSize == 0 ? count / pageSize : count / pageSize + 1;		return new PageInfo<>(likeArticles,totalPages);	}	@Override	public PageInfo<Article> getBigCategoryArticle(Integer pageNum, Integer pageSize, final Integer parentid) {		PageHelper.startPage(pageNum,pageSize);		List<Article> bigCategoryArticle = articleMapper.getBigCategoryArticle(parentid);		Integer count = articleMapper.getBigCategoryArticleCount();		int totalPages = count % pageSize == 0 ? count / pageSize : count / pageSize + 1;		return new PageInfo<>(bigCategoryArticle,totalPages);	}	@Override	public PageInfo<Article> getSmallCategoryArticle(Integer pageNum, Integer pageSize, final Integer cid) {		PageHelper.startPage(pageNum,pageSize);		List<Article> smallCategoryArticle = articleMapper.getSmallCategoryArticle(cid);		Integer count = articleMapper.getSmallCategoryArticleCount();		int totalPages = count % pageSize == 0 ? count / pageSize : count / pageSize + 1;		return new PageInfo<>(smallCategoryArticle,totalPages);	}	@Override	public Article getArticle(final Integer article_id) {		return articleMapper.getArticle(article_id);	}	@Override	public void deleteArticle(final Integer article_cid) {		articleMapper.deleteArticle(article_cid);	}}