package com.ly666.service.impl;import com.github.pagehelper.PageHelper;import com.github.pagehelper.PageInfo;import com.ly666.entity.Category;import com.ly666.mapper.CategoryMapper;import com.ly666.service.CategoryService;import org.springframework.stereotype.Service;import javax.annotation.Resource;import java.util.List;/** * @author ：luoyi * @date ：Created in 2019/3/4 10:26 * @desc : {} */@Service("CategoryServiceImpl")public class CategoryServiceImpl implements CategoryService {	@Resource(name = "CategoryMapper")	private CategoryMapper categoryMapper;	@Override	public void addCategory(final Category category) throws Exception {		Boolean bool = checkCategory(category);		if (bool) {			Category cname = getCnameCategory(category.getCname());			if (cname == null) {				Integer parentid = category.getParentid();				if (parentid == 0)					categoryMapper.addCategory(category.getCname(), category.getParentid());				else {					List<Category> parentCategory = categoryMapper.getParentCategory(0);					int count = 0;					for (Category category1 : parentCategory) {						if (parentid.equals(category1.getCid()))							categoryMapper.addCategory(category.getCname(), category.getParentid());						else							count++;					}					if (count == parentCategory.size())						throw new Exception("添加失败,添加的parentid找不到父分类id！");				}			} else				throw new Exception("添加失败，分类名不能重复！");		}	}	@Override	public PageInfo<Category> queryAllCategory(Integer pageNum, Integer pageSize) {		//设置页码和一页多少条数据		PageHelper.startPage(pageNum, pageSize);		//查询所有数据		List<Category> categories = categoryMapper.getAllCategoryOrderByParentid();		//获取总记录		Integer count = categoryMapper.categoryCount();		//设置总页数		int totalPages = count % pageSize == 0 ? count / pageSize : count / pageSize + 1;		return new PageInfo<>(categories, totalPages);	}	@Override	public Category getCategory(final Integer cid) {		if (cid != null)			return categoryMapper.getCategory(cid);		else			return null;	}	@Override	public void update(final Category category) throws Exception {		Boolean bool = checkCategory(category);		if (bool) {			Category c1 = categoryMapper.getCategory(category.getCid());			Category c2 = getCnameCategory(category.getCname());			if (c2 == null || c1.getCname().equals(c2.getCname())) {				Integer parentid = category.getParentid();				if (parentid == 0)					categoryMapper.updateCategory(category.getParentid(), category.getCname(), category.getCid());				else {					List<Category> parentCategory = categoryMapper.getParentCategory(0);					int count = 0;					for (Category c3 : parentCategory) {						if (parentid.equals(c3.getCid()))							categoryMapper.updateCategory(category.getParentid(), category.getCname(), category.getCid());						else							count++;					}					if (count == parentCategory.size())						throw new Exception("更新失败,更新的parentid找不到父分类id！");				}			} else				throw new Exception("更新失败，分类名不能重复！");		}	}	@Override	public void delete(final Integer cid) {		if (cid != null)			categoryMapper.deleteCategory(cid);	}	@Override	public List<Category> getParentCategory(Integer parentid) {		if (parentid != null)			return categoryMapper.getParentCategory(parentid);		else			return null;	}	@Override	public Boolean checkCategory(Category category) throws Exception {		//检查名字和id是否为空		if (!"".equals(category.getCname()) && category.getParentid() != null) {			return true;		} else			throw new Exception("操作失败，分类名称和分类parentid不能为空！");	}	@Override	public Category getCnameCategory(final String cname) {		if (cname != null)			return categoryMapper.getCnameCategory(cname);		else			return null;	}}